/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/segment/segment';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
export var Wrapper_SegmentButton = (function () {
    function Wrapper_SegmentButton(p0, p1) {
        this.changed = false;
        this._value = import1.UNINITIALIZED;
        this._disabled = import1.UNINITIALIZED;
        this.context = new import0.SegmentButton(p0, p1);
    }
    Wrapper_SegmentButton.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._value, currValue))) {
            this.changed = true;
            this.context.value = currValue;
            this._value = currValue;
        }
    };
    Wrapper_SegmentButton.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._disabled, currValue))) {
            this.changed = true;
            this.context.disabled = currValue;
            this._disabled = currValue;
        }
    };
    Wrapper_SegmentButton.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_SegmentButton;
}());
export var Wrapper_Segment = (function () {
    function Wrapper_Segment(p0, p1, p2, p3) {
        this.changed = false;
        this._color = import1.UNINITIALIZED;
        this._mode = import1.UNINITIALIZED;
        this._disabled = import1.UNINITIALIZED;
        this.context = new import0.Segment(p0, p1, p2, p3);
    }
    Wrapper_Segment.prototype.check_color = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._color, currValue))) {
            this.changed = true;
            this.context.color = currValue;
            this._color = currValue;
        }
    };
    Wrapper_Segment.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._mode, currValue))) {
            this.changed = true;
            this.context.mode = currValue;
            this._mode = currValue;
        }
    };
    Wrapper_Segment.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._disabled, currValue))) {
            this.changed = true;
            this.context.disabled = currValue;
            this._disabled = currValue;
        }
    };
    Wrapper_Segment.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_Segment;
}());
var renderType_SegmentButton_Host = null;
var _View_SegmentButton_Host0 = (function (_super) {
    __extends(_View_SegmentButton_Host0, _super);
    function _View_SegmentButton_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_SegmentButton_Host0, renderType_SegmentButton_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_SegmentButton_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-segment-button', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'segment-button');
        this.renderer.setElementAttribute(this._el_0, 'role', 'button');
        this.renderer.setElementAttribute(this._el_0, 'tappable', '');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_SegmentButton0(this.viewUtils, this.injector(0), this._appEl_0);
        this._SegmentButton_0_4 = new Wrapper_SegmentButton(this.renderer, new import8.ElementRef(this._el_0));
        this._appEl_0.initComponent(this._SegmentButton_0_4.context, [], compView_0);
        compView_0.create(this._SegmentButton_0_4.context, this.projectableNodes, null);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return this._appEl_0;
    };
    _View_SegmentButton_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.SegmentButton) && (0 === requestNodeIndex))) {
            return this._SegmentButton_0_4.context;
        }
        return notFoundResult;
    };
    _View_SegmentButton_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._SegmentButton_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_SegmentButton_Host0.prototype._handle_click_0_0 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._SegmentButton_0_4.context.onClick() !== false);
        return (true && pd_0);
    };
    return _View_SegmentButton_Host0;
}(import3.AppView));
function viewFactory_SegmentButton_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_SegmentButton_Host === null)) {
        (renderType_SegmentButton_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_SegmentButton_Host0(viewUtils, parentInjector, declarationEl);
}
export var SegmentButtonNgFactory = new import10.ComponentFactory('ion-segment-button', viewFactory_SegmentButton_Host0, import0.SegmentButton);
var styles_SegmentButton = [];
var renderType_SegmentButton = null;
var _View_SegmentButton0 = (function (_super) {
    __extends(_View_SegmentButton0, _super);
    function _View_SegmentButton0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_SegmentButton0, renderType_SegmentButton, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_SegmentButton0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this.renderer.projectNodes(parentRenderNode, import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'button-effect');
        this.init([], [this._el_0], [], []);
        return null;
    };
    return _View_SegmentButton0;
}(import3.AppView));
export function viewFactory_SegmentButton0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_SegmentButton === null)) {
        (renderType_SegmentButton = viewUtils.createRenderComponentType('', 1, import9.ViewEncapsulation.None, styles_SegmentButton, {}));
    }
    return new _View_SegmentButton0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=segment.ngfactory.js.map