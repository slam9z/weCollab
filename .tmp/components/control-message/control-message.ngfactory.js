/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './control-message';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '../../node_modules/ionic-angular/components/label/label.ngfactory';
import * as import14 from 'ionic-angular/config/config';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from 'ionic-angular/components/label/label';
export var Wrapper_ControlMessageComponent = (function () {
    function Wrapper_ControlMessageComponent() {
        this.changed = false;
        this._control = import1.UNINITIALIZED;
        this.context = new import0.ControlMessageComponent();
    }
    Wrapper_ControlMessageComponent.prototype.check_control = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._control, currValue))) {
            this.changed = true;
            this.context.control = currValue;
            this._control = currValue;
        }
    };
    Wrapper_ControlMessageComponent.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_ControlMessageComponent;
}());
var renderType_ControlMessageComponent_Host = null;
var _View_ControlMessageComponent_Host0 = (function (_super) {
    __extends(_View_ControlMessageComponent_Host0, _super);
    function _View_ControlMessageComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ControlMessageComponent_Host0, renderType_ControlMessageComponent_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_ControlMessageComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('control-message', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ControlMessageComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ControlMessageComponent_0_4 = new Wrapper_ControlMessageComponent();
        this._appEl_0.initComponent(this._ControlMessageComponent_0_4.context, [], compView_0);
        compView_0.create(this._ControlMessageComponent_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ControlMessageComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ControlMessageComponent) && (0 === requestNodeIndex))) {
            return this._ControlMessageComponent_0_4.context;
        }
        return notFoundResult;
    };
    _View_ControlMessageComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ControlMessageComponent_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ControlMessageComponent_Host0;
}(import3.AppView));
function viewFactory_ControlMessageComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ControlMessageComponent_Host === null)) {
        (renderType_ControlMessageComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_ControlMessageComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var ControlMessageComponentNgFactory = new import9.ComponentFactory('control-message', viewFactory_ControlMessageComponent_Host0, import0.ControlMessageComponent);
var styles_ControlMessageComponent = [];
var renderType_ControlMessageComponent = null;
var _View_ControlMessageComponent0 = (function (_super) {
    __extends(_View_ControlMessageComponent0, _super);
    function _View_ControlMessageComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ControlMessageComponent0, renderType_ControlMessageComponent, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_ControlMessageComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import11.TemplateRef_(this._appEl_0, viewFactory_ControlMessageComponent1);
        this._NgIf_0_6 = new import10.Wrapper_NgIf(this._appEl_0.vcRef, this._TemplateRef_0_5);
        this.init([], [this._anchor_0], [], []);
        return null;
    };
    _View_ControlMessageComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import12.NgIf) && (0 === requestNodeIndex))) {
            return this._NgIf_0_6.context;
        }
        return notFoundResult;
    };
    _View_ControlMessageComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = (this.context.errorMessage !== null);
        this._NgIf_0_6.check_ngIf(currVal_0, throwOnChange, false);
        this._NgIf_0_6.detectChangesInternal(this, this._anchor_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ControlMessageComponent0;
}(import3.AppView));
export function viewFactory_ControlMessageComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ControlMessageComponent === null)) {
        (renderType_ControlMessageComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_ControlMessageComponent, {}));
    }
    return new _View_ControlMessageComponent0(viewUtils, parentInjector, declarationEl);
}
var _View_ControlMessageComponent1 = (function (_super) {
    __extends(_View_ControlMessageComponent1, _super);
    function _View_ControlMessageComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ControlMessageComponent1, renderType_ControlMessageComponent, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_ControlMessageComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'ion-label', null);
        this.renderer.setElementAttribute(this._el_0, 'color', 'danger');
        this.renderer.setElementAttribute(this._el_0, 'padding-left', '');
        this._Label_0_3 = new import13.Wrapper_Label(this.parentInjector.get(import14.Config), new import15.ElementRef(this._el_0), this.renderer, null, null, null, null);
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_1 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_ControlMessageComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import16.Label) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._Label_0_3.context;
        }
        return notFoundResult;
    };
    _View_ControlMessageComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'danger';
        this._Label_0_3.check_color(currVal_0, throwOnChange, false);
        this._Label_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = import2.interpolate(1, '', this.parent.context.errorMessage, '');
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setText(this._text_1, currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ControlMessageComponent1;
}(import3.AppView));
function viewFactory_ControlMessageComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_ControlMessageComponent1(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=control-message.ngfactory.js.map