/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './control-message';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '@angular/common/src/directives/ng_if';
import * as import13 from '../../node_modules/ionic-angular/components/label/label.ngfactory';
import * as import14 from 'ionic-angular/config/config';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from 'ionic-angular/components/label/label';
export class Wrapper_ControlMessageComponent {
  context:import0.ControlMessageComponent;
  changed:boolean;
  /*private*/ _control:any;
  constructor() {
    this.changed = false;
    this._control = import1.UNINITIALIZED;
    this.context = new import0.ControlMessageComponent();
  }
  check_control(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._control,currValue))) {
      this.changed = true;
      this.context.control = currValue;
      this._control = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_ControlMessageComponent_Host:import4.RenderComponentType = (null as any);
class _View_ControlMessageComponent_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _ControlMessageComponent_0_4:Wrapper_ControlMessageComponent;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_ControlMessageComponent_Host0,renderType_ControlMessageComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('control-message',rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_ControlMessageComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ControlMessageComponent_0_4 = new Wrapper_ControlMessageComponent();
    this._appEl_0.initComponent(this._ControlMessageComponent_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._ControlMessageComponent_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ControlMessageComponent) && (0 === requestNodeIndex))) { return this._ControlMessageComponent_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ControlMessageComponent_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_ControlMessageComponent_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_ControlMessageComponent_Host === (null as any))) { (renderType_ControlMessageComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_ControlMessageComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const ControlMessageComponentNgFactory:import9.ComponentFactory<import0.ControlMessageComponent> = new import9.ComponentFactory<import0.ControlMessageComponent>('control-message',viewFactory_ControlMessageComponent_Host0,import0.ControlMessageComponent);
const styles_ControlMessageComponent:any[] = ([] as any[]);
var renderType_ControlMessageComponent:import4.RenderComponentType = (null as any);
class _View_ControlMessageComponent0 extends import3.AppView<import0.ControlMessageComponent> {
  _anchor_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import10.Wrapper_NgIf;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_ControlMessageComponent0,renderType_ControlMessageComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import11.TemplateRef_(this._appEl_0,viewFactory_ControlMessageComponent1);
    this._NgIf_0_6 = new import10.Wrapper_NgIf(this._appEl_0.vcRef,this._TemplateRef_0_5);
    this.init(([] as any[]),[this._anchor_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import12.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = (this.context.errorMessage !== (null as any));
    this._NgIf_0_6.check_ngIf(currVal_0,throwOnChange,false);
    this._NgIf_0_6.detectChangesInternal(this,this._anchor_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_ControlMessageComponent0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.ControlMessageComponent> {
  if ((renderType_ControlMessageComponent === (null as any))) { (renderType_ControlMessageComponent = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,styles_ControlMessageComponent,{})); }
  return new _View_ControlMessageComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_ControlMessageComponent1 extends import3.AppView<any> {
  _el_0:any;
  _Label_0_3:import13.Wrapper_Label;
  _text_1:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_ControlMessageComponent1,renderType_ControlMessageComponent,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'ion-label',(null as any));
    this.renderer.setElementAttribute(this._el_0,'color','danger');
    this.renderer.setElementAttribute(this._el_0,'padding-left','');
    this._Label_0_3 = new import13.Wrapper_Label(this.parentInjector.get(import14.Config),new import15.ElementRef(this._el_0),this.renderer,(null as any),(null as any),(null as any),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._expr_1 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.Label) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._Label_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = 'danger';
    this._Label_0_3.check_color(currVal_0,throwOnChange,false);
    this._Label_0_3.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = import2.interpolate(1,'',this.parent.context.errorMessage,'');
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setText(this._text_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_ControlMessageComponent1(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_ControlMessageComponent1(viewUtils,parentInjector,declarationEl);
}